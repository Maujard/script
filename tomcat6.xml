<!-- tomcat6 -->
<project basedir="." default="tomcat6.help" name="tomcat6" xmlns:if="ant:if" xmlns:unless="ant:unless">
	<description>&quot;tomcat6 target&quot;</description>
	<!--<property file="tomcat.properties"/><property environment="env"/>-->
	<!--
tout faire
-->
	<target depends="init,tomcat6.init,tomcat6.buildBySync" name="tomcat6.publish"/>
	<!--
sauvegarde de la buid en production dans le répertoire tomcat6.saveBefore 
-->
	<target depends="init,tomcat6.init" name="tomcat6.saveBefore">
		<delete dir="${rff.working.saveBefore.location}"/>
		<mkdir dir="${rff.working.saveBefore.location}"/>
		<sync todir="${rff.working.saveBefore.location}">
			<fileset dir="${tomcat6.instance.applis.location}">
				<exclude name="work/"/>
				<exclude name="temp/"/>
			</fileset>
		</sync>
	</target>
	<!--
sauvegarde de la buid en production dans le répertoire saveAfter
-->
	<target depends="init,tomcat6.init" name="tomcat6.saveAfter">
		<delete dir="${rff.working.saveAfter.location}"/>
		<mkdir dir="${rff.working.saveAfter.location}"/>
		<sync todir="${rff.working.saveAfter.location}">
			<fileset dir="${tomcat6.instance.applis.location}">
				<exclude name="work/"/>
				<exclude name="temp/"/>
			</fileset>
		</sync>
	</target>
	<!--
restauration de la tomcat6.saveBefore en  dans le répertoire de production de l'instance
-->
	<target depends="init,tomcat6.init" name="tomcat6.restore">
		<sync includeEmptyDirs="Yes" overwrite="Yes" todir="${tomcat6.instance.applis.location}">
			<fileset dir="${rff.working.saveBefore.location}/"/>
			<preserveintarget preserveEmptyDirs="Yes">
				<include name="**/work/**"/>
				<include name="**/temp/**"/>
			</preserveintarget>
		</sync>
		<mkdir dir="${tomcat6.instance.applis.location}/work"/>
		<mkdir dir="${tomcat6.instance.applis.location}/temp"/>
	</target>
	<!--
sauvegarde et 
synchronisation du répertoire de l'instance avec le contenue de build
-->
	<target depends="init,tomcat6.buildSync" name="tomcat6.buildBySync"/>
	<!--
sauvegarde et 
copie du contenue de build dans répertoire de l'instance.
attention ne supprime pas les objets
-->
	<target depends="init,tomcat6.buildCopy" name="tomcat6.buildByCopy"/>
	<!--
synchronisation du répertoire de l'instance avec le contenue de build
-->
	<target depends="init,tomcat6.init" name="tomcat6.buildSync">
		<echo message="from ${rff.target.build.location} to ${tomcat6.instance.applis.location} "/>
		<sync overwrite="Yes" todir="${tomcat6.instance.applis.location}">
			<fileset dir="${rff.target.build.location}"/>
			<preserveintarget preserveEmptyDirs="Yes">
				<include name="**/logs/**"/>
				<include name="**/work/**"/>
				<include name="**/temp/**"/>
			</preserveintarget>
		</sync>
	</target>
	<!--
synchronisation du répertoire de l'instance avec le contenue de build
-->
	<target depends="init,tomcat6.init" name="tomcat6.buildCopy">
		<copy todir="${tomcat6.instance.applis.location}">
			<fileset dir="${rff.target.build.location}"/>
		</copy>
	</target>
	<!--
copie des logs
-->
	<target depends="init,tomcat6.init" name="tomcat6.saveLogs">
		<zip basedir="${tomcat6.instance.logs.location}" destfile="${rff.working.log.location}/logs.zip" update="true"/>
	</target>
	<!--
help
-->
	<target depends="init,tomcat6.init" name="tomcat6.help">
		<echo message="help "/>
		<echo message="Syntax : "/>
		<echo message="ant tomcat6.restore | tomcat6.saveBefore | tomcat6.saveAfter | tomcat6.buildByCopy | tomcat6.syncByCopy | tomcat6.saveLogs | tomcat6.start | tomcat6.stop"/>
	</target>
	<!--
start tomcat
-->
	<target depends="init,tomcat6.init" name="tomcat6.start">
		<exec executable="${env.SystemRoot}/system32/sc.exe" failonerror="true" resultproperty="App.state">
			<arg line="start ${tomcat6.instance.main.service}"/>
		</exec>
		<echo message="tomcat6.start.rc = ${App.state}"/>
	</target>
	<!--
stop tomcat
-->
	<target depends="init,tomcat6.init" name="tomcat6.stop">
		<exec executable="${env.SystemRoot}/system32/sc.exe" failonerror="false" resultproperty="App.state">
			<arg line="stop ${tomcat6.instance.main.service}"/>
		</exec>
		<echo message="tomcat6.stop.rc = ${App.state}"/>
	</target>
	
	<!--  install binary -->
		<target depends="init,tomcat6.init" name="tomcat6.binary">
		<unzip dest="${applis.location}" src="${rff.target.binary.location}/${tomcat6.binary.src}"/>
	</target>

	<!--  install service -->
	<target depends="init,tomcat6.create,tomcat6.update" name="tomcat6.install"/>
	<target depends="init,tomcat6.init" name="tomcat6.create">
		<exec executable="${tomcat6.home}/bin/tomcat6.exe" output="${rff.working.log.location}/service.log">
			<arg line="//IS//${tomcat6.instance.main.service} --Description=&quot;${tomcat6.instance.main.description}&quot; --DisplayName=${tomcat6.instance.main.service}"/>
			<arg line="-Install=${tomcat6.home}/bin/tomcat6.exe   --Jvm=&quot; &quot; "/>
		</exec>
	</target>

	<!--  uninstall service -->

	<target depends="init,tomcat6.init" name="tomcat6.uninstall">
		<echo message=" uninstall tomcat6 sc.exe delete ${tomcat6.instance.main.service}"/>
		<exec error="${rff.working.log.location}/apache24uninstall.txt" executable="sc.exe">
			<arg line="delete ${tomcat6.instance.main.service}"/>
		</exec>
	</target>

	<target depends="init,tomcat6.init" name="tomcat6.update">
		<exec append="yes" executable="${tomcat6.home}/bin/tomcat6.exe" output="${rff.working.log.location}/service.log">
			<arg line="//US//${tomcat6.instance.main.service}"/>
			<arg line="--StartMode=java --StopMode=java "/>
			<arg line="--StartClass=org.apache.catalina.startup.Bootstrap --StartParams=start"/>
			<arg line="--StartPath=&quot;${tomcat6.instance.applis.location}/work&quot;"/>
			<arg line="--StopClass=org.apache.catalina.startup.Bootstrap --StopParams=stop"/>
			<arg line="--StartPath=&quot;${tomcat6.instance.applis.location}/work&quot;"/>
			<arg line="--StopPath=&quot;${tomcat6.instance.applis.location}/work&quot;"/>
			<arg line="--Classpath=&quot;%JAVA_HOME%/lib/tools.jar;${tomcat6.home}/bin/bootstrap.jar&quot;"/>
			<arg line="--LogPath=&quot;${tomcat6.instance.logs.location}&quot;"/>
			<arg line="--LogPrefix=commons-daemon"/>
			<arg line="--StdOutput=&quot;${tomcat6.instance.logs.location}/stdout.log&quot;"/>
			<arg line="--StdError=&quot;${tomcat6.instance.logs.location}/stderror.log&quot;"/>
			<arg line="--PidFile=&quot;${tomcat6.instance.applis.location}/work/pidfile.pid&quot;"/>
			<arg line="--JvmMs ${tomcat6.instance.main.catalina.jvmMs} --JvmMx ${tomcat6.instance.main.catalina.jvmMx} --JvmSs ${tomcat6.instance.main.catalina.jvmSs}"/>
			<arg line="--JvmOptions -Dcatalina.home=&quot;${tomcat6.home}&quot;;-Dcatalina.base=&quot;${tomcat6.instance.applis.location}&quot;;-Djava.endorsed.dirs=&quot;${tomcat6.instance.applis.location}/endorsed&quot;;-Djava.io.tmpdir=&quot;${tomcat6.instance.applis.location}/temp&quot;;-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager;-Djava.util.logging.config.file=&quot;${tomcat6.instance.applis.location}/conf/logging.properties&quot;"/>
		</exec>
	</target>
	<target depends="init,tomcat6.init" name="tomcat6.delete">
		<exec executable="${tomcat6.home}/bin/tomcat6.exe" output="${rff.working.log.location}/service.log">
			<arg line="//DS//${tomcat6.instance.main.name}"/>
		</exec>
	</target>
	<target name="check.is.tomcat.exist">
		<condition property="tomcat.exist">
			<available file="${tomcat6.instance.applis.location}" type="dir"/>
		</condition>
	</target>
	<target name="tomcat6.init">
		<mkdir dir="${tomcat6.instance.logs.location}"/>
		<mkdir dir="${tomcat6.home}"/>
		<mkdir dir="${tomcat6.instance.applis.location}/work"/>
		<mkdir dir="${tomcat6.instance.applis.location}/temp"/>
		<mkdir dir="${tomcat6.instance.applis.location}/bin"/>
		<mkdir dir="${tomcat6.instance.applis.location}/data"/>
		<mkdir dir="${tomcat6.instance.applis.location}/lib"/>
	</target>
</project>